---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: spark-operator
  annotations:
    argocd.argoproj.io/sync-wave: "1" # after argocd
  labels:
    app: spark-operator
spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true # solve crd deployment issues
    automated:
      prune: true
      selfHeal: true
  destination:
    name: in-cluster
    namespace: spark
  source:
    repoURL: https://kubeflow.github.io/spark-operator
    chart: spark-operator
    targetRevision: v2.2.0
    helm:
      releaseName: spark-operator
      values: |
        controller:
          replicas: 2
          logLevel: info
          leaderElection:
            enable: true
          workers: 10
          uiService:
            enable: true
          uiIngress:
            enable: true
            ingressClassName: traefik
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.entrypoints: web
            pathType: Prefix
            path: /
          serviceAccount:
            create: true
            automountServiceAccountToken: true
          rbac:
            create: true
          podSecurityContext:
            fsGroup: 185
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"

        webhook:
          enable: true
          replicas: 1
          leaderElection:
            enable: true
          logLevel: info
          port: 9443
          failurePolicy: Fail
          serviceAccount:
            create: true
            automountServiceAccountToken: true
          rbac:
            create: true
          podSecurityContext:
            fsGroup: 185
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault

        spark:
          jobNamespaces:
            - spark
          serviceAccount:
            create: true
            automountServiceAccountToken: true
          rbac:
            create: true

        prometheus:
          metrics:
            enable: true
            port: 8080
            endpoint: "/metrics"
            jobStartLatencyBuckets: "30,60,90,120,150,180,210,240,270,300"
          podMonitor:
            create: true
            labels:
              release: prometheus-stack
            jobLabel: spark-operator
            podMetricsEndpoint:
              interval: 5s
              scheme: http
